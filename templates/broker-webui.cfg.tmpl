# {{ ansible_managed }}
## Module:      WebUI
## Loaded by:   Broker
# The Shinken web interface and integrated web server.
define module {
    module_name     WebUI
    module_type     webui
    host            {{ shinken_broker_webui_host }}     ; All interfaces = 0.0.0.0
    port            {{ shinken_broker_webui_port }}
    # auth_secret     CHANGE_ME   ; CHANGE THIS or someone could forge
	auth_secret		{{ shinken_broker_webui_auth_secret }}
                                ; cookies!!
    allow_html_output   0       ; Allow or not HTML chars in plugins output.
                                ; WARNING: Allowing can be a security issue.
    max_output_length   100     ; Maximum output length for plugin output in webui
    manage_acl          1       ; Use contacts ACL. 0 allow actions for all.
    play_sound          0       ; Play sound on new non-acknowledged problems.
    #login_text      Welcome on Shinken WebUI    ; Text in the login form.

    ## Modules for WebUI
    # - Apache_passwd   = Use an htpasswd file for auth backend.
    # - ActiveDir_UI    = Use AD for auth backend (and retrieve photos).
    # - Cfg_password    = Use the password setted in Shinken contact for auth.
    # - PNP_UI          = Use PNP graphs in the UI.
    # - GRAPHITE_UI     = Use graphs from Graphite time series database.
    # - Mongodb         = Save user preferences to a Mongodb database
    # - SQLitedb        = Save user preferences to a SQLite database
    #modules     Apache_passwd, ActiveDir_UI, Cfg_password, PNP_UI, Mongodb, Glances_UI
    modules     SQLitedb,Cfg_password

    ## Advanced Options
    # Don't use them as long as you don't know what you are doing!
    #http_backend            auto    ; Choice is: auto, wsgiref, cherrypy, flup,
                                     ; flupscgi, paste, tornado, twisted or gevent.
                                     ; Leave auto to find the best available.
    #remote_user_enable      1       ; If WebUI is behind a web server which
                                     ; has already authentified user, enable.
    #remote_user_enable      2       ; Look for remote user in the WSGI environment
                                     ; instead of the HTTP header. This allows
                                     ; for fastcgi (flup) and scgi (flupscgi)
                                     ; integration, eg. with the apache modules.
    #remote_user_variable    X_Remote_User  ; Set to the HTTP header containing
                                     ; the authentificated user s name, which
                                     ; must be a Shinken contact.
    # If you got external plugins (pages) to load on webui
    #additional_plugins_dir   

}

