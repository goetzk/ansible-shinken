---

- name: Configure shinken users for contact and authentication
  with_items: "{{ shinken_contacts }}"
  template:
    src=contacts.cfg.tmpl
    dest={{ shinken_config_contacts }}/{{ item.contact_name |mandatory }}.cfg
    mode=640
  notify:
  - restart shinken arbiter

# Following Jinja magic thanks to mikecee
# - name: Build list of admin users
#   set_fact:
#     admin_users="{{ shinken_contacts | sum(attribute='is_admin', start=[]) | unique }}"

# - debug:
#     msg: "{{ shinken_contacts.0 }}"
#
# - name: Populate admins list
#   set_fact:
#     admin_users: "{{ admin_users|default([]) | combine( item.name ) }}"
#   with_items: shinken_contacts
#   when: item.is_admin == 1
#
# - name: Install admins contact group
# #   with_items: "{{ admin_users }}"
#   with_items: "{{ shinken_contacts }}"
#   template:
#     src: contactgroup-admin.cfg.tmpl
#     dest: /etc/shinken/contactgroups/admin.cfg
#   notify:
#   - restart shinken arbiter

# TODO: after figuring out admins, do that for users too

- name: Create configuration for services to monitor
  with_items: "{{ shinken_services }}"
  template:
    dest={{ shinken_config_services }}/{{ item.service_description|replace(' ', '_') }}.cfg
    src=services.cfg.tmpl
  notify:
  - restart shinken arbiter

- name: Create configuration for hosts to monitor (without services)
  with_items: "{{ shinken_hosts }}"
  template:
    dest={{ shinken_config_hosts }}/{{ item.host_name }}.cfg
    src=hosts.cfg.tmpl
  notify:
  - restart shinken arbiter

# Following Jinja magic thanks to mikecee
- name: Build list of hostgroups
  set_fact:
    hglist="{{ shinken_hosts | sum(attribute='hostgroups', start=[]) | unique }}"

- name: Create configuration for hostgroups
  with_items: "{{ hglist }}"
  template:
    dest={{ shinken_config_hostgroups }}/{{ item }}.cfg
    src=hostgroups.cfg.tmpl
  notify:
  - restart shinken arbiter

- name: Install 'all' hostgroup
  template:
    dest={{ shinken_config_hostgroups }}/all.cfg
    src=hostgroups-all.cfg.tmpl
  notify:
  - restart shinken arbiter

- name: Fix path to nagios plugins directory on RedHat family
  when: ansible_os_family == "RedHat"
  lineinfile:
    dest: /etc/shinken/resource.d/paths.cfg
    regexp: '\$NAGIOSPLUGINSDIR\$=/usr/lib.*'
    line: '$NAGIOSPLUGINSDIR$=/usr/lib64/nagios/plugins'
    state: present
  notify:
  - restart shinken arbiter

